export const group=()=>{const e=new Map;const t=(t,a)=>{if(!e.has(a)){e.set(a,new Set)}e.get(a).add(t)};const a=[];const s=new Set;let c=false;const n=n=>({set value(t){n=t;if(e.has(this)){e.get(this).forEach(c?e=>s.add(e):e=>e())}},get value(){const e=a.at(-1);if(e&&e!=this){t(e,this)}return n}});const o=e=>{a.push(e);e();a.pop()};const l=e=>{const t=n();o((()=>{t.value=e()}));return{get value(){return t.value}}};const u=e=>{s.clear();c=true;e();for(let e of s){e()}c=false;s.clear()};return{signal:n,effect:o,computed:l,batch:u}};export const{signal,effect,computed,batch}=group();export const onchange=e=>{let t=e.value;let a=signal(t);effect((()=>{if(t!==e.value){t=a.value=e.value}}));return a};