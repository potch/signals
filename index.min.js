export const group=()=>{const t=new Map;const e=(e,s)=>{if(!t.has(s)){t.set(s,new Set)}t.get(s).add(e)};const s=[];const c=new Set;let a=false;const n=n=>({set value(e){n=e;if(t.has(this)){t.get(this).forEach(a?t=>c.add(t):t=>t())}},get value(){const t=s.at(-1);if(t&&t!=this){e(t,this)}return n}});const o=t=>{s.push(t);t();s.pop()};const r=t=>{const e=n();o((()=>{e.value=t()}));return{get value(){return e.value}}};const u=t=>{a=true;t();a=false;c.forEach((t=>t()));c.clear()};return{signal:n,effect:o,computed:r,batch:u}};export const{signal,effect,computed,batch}=group();