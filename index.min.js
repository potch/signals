export const group=()=>{const t=new Map;const e=(e,s)=>{if(!t.has(s)){t.set(s,new Set)}t.get(s).add(e)};const s=[];const c=new Set;let a=false;const o=(o,n)=>({label:n,set value(e){o=e;if(t.has(this)){if(a){t.get(this).forEach((t=>c.add(t)))}else{t.get(this).forEach((t=>t()))}}},get value(){const t=s.at(-1);if(t&&t!=this){e(t,this)}return o}});const n=t=>{s.push(t);t();s.pop()};const r=t=>{const e=o();n((()=>{e.value=t()}));return{get value(){return e.value}}};const u=t=>{a=true;t();a=false;c.forEach((t=>t()));c.clear()};return{signal:o,effect:n,computed:r,batch:u}};export const{signal,effect,computed,batch}=group();